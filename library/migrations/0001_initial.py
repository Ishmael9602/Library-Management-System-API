# Generated by Django 5.2.4 on 2025-08-28 12:18

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Book title', max_length=200)),
                ('author', models.CharField(help_text='Book author', max_length=100)),
                ('isbn', models.CharField(help_text='ISBN number (10 or 13 digits)', max_length=13, unique=True, validators=[django.core.validators.RegexValidator(message='ISBN must be 10 or 13 digits', regex='^\\d{10}(\\d{3})?$')])),
                ('publisher', models.CharField(blank=True, help_text='Publisher name', max_length=100)),
                ('published_date', models.DateField(help_text='Publication date')),
                ('genre', models.CharField(blank=True, help_text='Book genre', max_length=50)),
                ('total_copies', models.PositiveIntegerField(default=1, help_text='Total number of copies')),
                ('available_copies', models.PositiveIntegerField(default=1, help_text='Available copies')),
                ('description', models.TextField(blank=True, help_text='Book description')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['title'],
                'indexes': [models.Index(fields=['title'], name='library_boo_title_c38ef2_idx'), models.Index(fields=['author'], name='library_boo_author_66aacb_idx'), models.Index(fields=['isbn'], name='library_boo_isbn_951e8b_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_membership', models.DateField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: "+999999999"', regex='^\\+?1?\\d{9,15}$')])),
                ('address', models.TextField(blank=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_of_membership'],
            },
        ),
        migrations.CreateModel(
            name='Checkout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checkout_date', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateTimeField()),
                ('return_date', models.DateTimeField(blank=True, null=True)),
                ('is_returned', models.BooleanField(default=False)),
                ('late_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('notes', models.TextField(blank=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checkouts', to='library.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checkouts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-checkout_date'],
                'indexes': [models.Index(fields=['user', 'is_returned'], name='library_che_user_id_6168cf_idx'), models.Index(fields=['book', 'is_returned'], name='library_che_book_id_e67d51_idx'), models.Index(fields=['due_date'], name='library_che_due_dat_dc8e80_idx')],
                'unique_together': {('user', 'book', 'is_returned')},
            },
        ),
    ]
